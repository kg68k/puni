        - DEVICE DRIVER MANUAL -

==============================================================================

・デバイスドライバの構造

　デバイスドライバは以下のモジュールから構成される。

デバイスヘッダ
    　デバイスドライバの先頭に位置し、デバイスの種類を示すと同時にデータ処理ル
    ーチンへのポインタ及びデバイス名(キャラクタデバイスの場合のみ)を持つ。

ストラテジルーチン
    　OS の要求ごとに呼び出され、処理内容や返値の受け渡しに使用するリクエスト
    ヘッダのアドレスをレジスタ a5 で渡される。アドレスを保存したらすぐに帰る。
    　レジスタは全て保存すること。

割り込みルーチン
    　ストラテジルーチンが受け取ったリクエストヘッダを実際に処理する。リクエス
    トヘッダからコマンドを取り出して処理を行い、エラーコードをリクエストヘッダ
    にセットして帰る。実際に入出力を行うコマンドではリクエストヘッダ内にバッフ
    ァのアドレスが設定されており、指定されたバッファを使用してデータの受け渡し
    を行う。
    　レジスタは全て保存すること。

注意:
    　標準入出力デバイス(CON)を作成する場合は、以下の4つの OS ファンクションを
    処理するルーチンを作成したうえ、DOS _INTVCS によって処理ルーチンを登録しな
    ければならない。
        $ff21(_FNCKEY), $ff22(_KNJCTRL), $ff23(_CONCTRL), $ff24(_KEYCTRL)

==============================================================================

・デバイスヘッダ

offset  size
0       1.l     次のドライバへのリンクポインタ
                1 個のデバイスドライバの中で 2 個以上のデバイスをサポートする
                場合には、次のデバイスヘッダアドレスをセットする。そのヘッダで
                終りの場合及び 1 個しかサポートしない場合、-1 にする。
4       1.w     デバイス属性
                bit 15          0:ブロックデバイス      1:キャラクタデバイス
                bit 14          0:IOCTRL 不可           1:可能
                bit 13          0:ローカル              1:リモート
                bit  6          0:特殊 IOCTRL 不可      1:可能
                bit  5          0:COOKED MODE(1 バイトずつ処理)
                                1:RAW MODE(指定バイトずつ)
                bit  3          1:CLOCK    デバイス
                bit  2          1:NUL      デバイス
                bit  1          1:標準出力 デバイス
                bit  0          1:標準入力 デバイス
                bit 12～7,4 は未使用です。
                bit 0～5 は bit 15 = 1 の場合のみ有効です。
6       1.l     ストラテジルーチンのエントリポインタ
                リクエストヘッダのポインタは a5 で与えられる。
10      1.l     割り込みルーチンのエントリポインタ
14      8.b     キャラクタデバイスの場合、デバイス名
                ブロックデバイスの場合は先頭 1 バイトを $20 以下のコードにし、
                残り 7 バイトにはデバイス名を入れてもかまわない。

==============================================================================

・エラーコード

$0000:  処理完了

    上位バイト

$10～$1f    エラー(中止のみ)
$20～$2f    エラー(再実行のみ)
$30～$3f    エラー(中止＆再実行)
$40～$4f    エラー(無視のみ)
$50～$5f    エラー(中止＆無視)
$60～$6f    エラー(再実行＆無視)
$70～$7f    エラー(中止＆再実行＆無視)

    下位バイト

$01     ユニット番号が不正
$02     ドライブの準備が出来ていない
$03     コマンドコードが不正
$04     CRC エラー
$05     ディスクの管理領域が破壊されている
$06     シークエラー
$07     無効なメディア
$08     セクタが見つからない
$09     プリンタオフライン
$0a     書き込みエラー
$0b     読み込みエラー
$0c     その他のエラー
$0d     ライトプロテクト(取り替え不可)
$0e     書き込み不可(取り替え可能)、又はディスクが入ってない

※デバイスドライバの組み込みに失敗した場合は $700d を返すのが慣例となっている。

==============================================================================

・BPB(Bios Parameter Block)

offset  size
0       1.w     1 セクタ当りのバイト数
2       1.b     1 クラスタ当りのセクタ数
3       1.b     FAT 領域の個数
                bit 7 = 1 で MS-DOS 形式 FAT(16bit Intel 配列)
4       1.w     予約セクタ数(FAT 先頭以前にあるセクタ数)
6       1.w     ルートディレクトリのエントリ数
8       1.w     全領域のセクタ数(0 の場合は offset 12 の 1.l が参照される)
10      1.b     メディアバイト
11      1.b     FAT 領域 1 個当りのセクタ数
12      1.l     全領域のセクタ数(拡張)

　全領域のセクタ数が 65535 を超えてワードで表現出来ない場合、8 バイト目からの
1 ワードは 0 にし、12 バイト目からの 1 ロングワードにセクタ数を設定する。ワー
ドで表現できる場合は 12 バイト目からは不要である。

==============================================================================

・メディアバイト

$e0     2DDx(2DD/10)  ┐ 9SCDRV.X による拡張
$e5     1D/9          │
$e6     2D/9          │
$e7     1D/8          │
$e8     2D/8          │
$e9     2HQx(2HQ16)   │
$ea     2HT           │
$eb     2HS           │
$ec     2HDE          │
$ee     1DD/9         │
$ef     1DD/8         │
                      │
$f0     DMF           ┘
$f3     WINDRV        ─ WinX68k による拡張
$f4     DAT、NFS      ─ NFS は NFS.x による拡張
$f5     CD-ROM
$f6     MO
$f7     SCSI-HD
$f8     SASI-HD
$f9     RAMDISK
$fa     2HQ
$fb     2DD/8
$fc     2DD/9
$fd     2HC
$fe     2HD

==============================================================================

・デバイスドライバ(キャラクタデバイス)

　キャラクタデバイスのデバイスドライバはコマンド 0～12、19 が使用される。

コマンド $00    初期化
        in      (offset size)
                 0      1.b     定数(22、内蔵デバイスドライバの初期化時は 23)
                 2      1.b     コマンド(0)
                18      1.l     パラメータアドレス
        out     (offset size)
                 3      1.b     エラーコード(下位)
                 4      1.b     エラーコード(上位)
                14      1.l     デバイスドライバの終了アドレス+1

        　システム起動時に一回だけ呼ばれる。タイトルを表示し初期化動作を行った
        後、デバイスドライバの終わりのアドレス+1 を設定して返る。パラメータの
        内容は以下の通り。

        .dc.b   'ファイル名',0  ;デバイスドライバのファイル名
        .dc.b   '引数 1',0      ;半角スペースで区切られた引数
        .dc.b   '引数 2',0
                ……
        .dc.b   '引数 n',0
        .dc.b   0               ;引数列の終わり

コマンド $03    IOCTRL による入力
        in      (offset size)
                 0      1.b     定数(26)
                 2      1.b     コマンド(3)
                14      1.l     バッファアドレス
                18      1.l     バイト数
        out     (offset size)
                 3      1.b     エラーコード(下位)
                 4      1.b     エラーコード(上位)

        　バッファに指定バイト数だけ IOCTRL によりデータを読み込む。

コマンド $04    入力
        in      (offset size)
                 0      1.b     定数(26)
                 2      1.b     コマンド(4)
                14      1.l     バッファアドレス
                18      1.l     バイト数
        out     (offset size)
                 3      1.b     エラーコード(下位)
                 4      1.b     エラーコード(上位)
                18      1.l     実際に入力したバイト数

        　バッファに指定バイト数だけデータを読み込む。データが用意できていない
        場合は、データが揃うまで待機する。
          内蔵デバイスドライバの場合、常に指定したバイト数だけ入力される。

コマンド $05    先読み入力
        in      (offset size)
                 0      1.b     定数(26)
                 2      1.b     コマンド(5)
        out     (offset size)
                 3      1.b     エラーコード(下位)
                 4      1.b     エラーコード(上位)
                13      1.b     読み込んだデータ

        　デバイスからデータを 1 バイト先読みし、リクエストヘッダに書き込む。
        データが入力されていない場合は待たずに 0 を書き込んで返る。入力したデ
        ータはバッファから取り除かずに、次回に入力できるようにしておく。

コマンド $06    入力ステータス検査
        in      (offset size)
                 0      1.b     定数(26)
                 2      1.b     コマンド(6)
        out     (offset size)
                 3      1.b     エラーコード(下位)
                 4      1.b     エラーコード(上位)

        　デバイスからの入力が可能か否かを調べる。入力可能であればエラーコード
        (下位)に 0 を返し、入力不可能であれば 0 以外を返す。

コマンド $07    入力バッファ消去
        in      (offset size)
                 0      1.b     定数(26)
                 2      1.b     コマンド(7)
        out     (offset size)
                 3      1.b     エラーコード(下位)
                 4      1.b     エラーコード(上位)

        　それまでに入力されてバッファに溜っていたデータを全て破棄する。

コマンド $08    出力(verify off)
        in      (offset size)
                 0      1.b     定数(26)
                 2      1.b     コマンド(8)
                14      1.l     データアドレス
                18      1.l     バイト数
        out     (offset size)
                 3      1.b     エラーコード(下位)
                 4      1.b     エラーコード(上位)
                18      1.l     実際に出力したバイト数

        　データを指定バイト数だけデバイスに書き込む。
          内蔵デバイスドライバの場合、常に指定したバイト数だけ出力される。

コマンド $09    出力(verify on)
        in      (offset size)
                 0      1.b     定数(26)
                 2      1.b     コマンド(9)
                14      1.l     データアドレス
                18      1.l     バイト数
        out     (offset size)
                 3      1.b     エラーコード(下位)
                 4      1.b     エラーコード(上位)
                18      1.l     実際に出力したバイト数

        　データを指定バイト数だけデバイスに書き込む。書き出した後にそのデータ
        を読み込んで、実際に書き出せている事を確認する。
          内蔵デバイスドライバの場合、常に指定したバイト数だけ出力される。

コマンド $0a   出力ステータス検査
        in      (offset size)
                 0      1.b     定数(26)
                 2      1.b     コマンド(10)
        out     (offset size)
                 3      1.b     エラーコード(下位)
                 4      1.b     エラーコード(上位)

        　デバイスへの出力が可能か否かを調べる。出力可能であればエラーコード
        (下位)に 0 を返し、出力不可能であれば 0 以外を返す。

コマンド $0c    IOCTRL による出力
        in      (offset size)
                 0      1.b     定数(26)
                 2      1.b     コマンド(12)
                14      1.l     データアドレス
                18      1.l     バイト数
        out     (offset size)
                 3      1.b     エラーコード(下位)
                 4      1.b     エラーコード(上位)

        　データを指定バイト数だけ IOCTRL によりデバイスに書き込む。

コマンド $13    特殊 IOCTRL による制御
        in      (offset size)
                 0      1.b     定数(26)
                 2      1.b     コマンド(19)
                14      1.l     バッファアドレス
                18      1.w     内部コマンド
        out     (offset size)
                 3      1.b     エラーコード(下位)
                 4      1.b     エラーコード(上位)

        　デバイスドライバの特殊制御を行う。処理内容はデバイスドライバによって
        異なる。

==============================================================================

・デバイスドライバ(ローカルドライブ)

　ローカルドライブのデバイスドライバはコマンド 0～12、19 が使用される。

コマンド $00    初期化
        in      (offset size)
                 0      1.b     定数(22、内蔵デバイスドライバの初期化時は 23)
                 2      1.b     コマンド(0)
                18      1.l     パラメータアドレス
                22      1.b     ドライブ番号
        out     (offset size)
                 3      1.b     エラーコード(下位)
                 4      1.b     エラーコード(上位)
                13      1.b     ユニット数
                14      1.l     デバイスドライバの終了アドレス+1
                18      1.l     BPB ポインタ配列のアドレス

        　キャラクタデバイスでの初期化処理に加え、デバイスドライバが管理するユ
        ニットの数と、そのユニット数分の BPB へのポインタを並べた配列のアドレ
        スを返す。自分のドライブ番号が渡され、タイトルの表示等に使用できる。

コマンド $01    メディア交換検査
        in      (offset size)
                 0      1.b     定数(26)
                 1      1.b     ユニット番号
                 2      1.b     コマンド(1)
                13      1.b     メディアバイト
        out     (offset size)
                 3      1.b     エラーコード(下位)
                 4      1.b     エラーコード(上位)
                14      1.b     交換フラグ

        　前回のアクセス以降にメディアが交換されたか否かを調べる。交換されてい
        る場合は正数(通常は 1)を返し、交換されていなければ負数(通常は -1)を返
        す。交換されたかどうか不明な場合は負数を返すこと。デバイスドライバでエ
        ラーが発生した場合(エラーコードの下位が 0 以外の時)は交換されたと見な
        される。
        　このコマンドはシステム内部の I/O バッファのデータが有効であるかを知
        る為に呼び出される。

コマンド $02    BPB 再構築
        in      (offset size)
                 0      1.b     定数(26)
                 1      1.b     ユニット番号
                 2      1.b     コマンド(2)
                13      1.b     メディアバイト
        out     (offset size)
                 3      1.b     エラーコード(下位)
                 4      1.b     エラーコード(上位)
                18      1.l     BPB ポインタのアドレス

        　指定されたユニット番号のメディアのフォーマットを調べ、再構築した BPB
        を返す。初期化コマンドと違い、BPB 及び BPB へのポインタは指定されたユ
        ニットのものだけを返せばよい。
        　このコマンドはメディアが交換された時に呼び出される。エラーコードが 0
        でなくても、エラー処理が呼び出されることはなく無視される。
        　BPB の修正(再構築)が不要な場合は、エラーで戻るか、BPB の内容を書き換
        えないで戻ればよい。

コマンド $03    IOCTRL による入力
        in      (offset size)
                 0      1.b     定数(26)
                 1      1.b     ユニット番号
                 2      1.b     コマンド(3)
                14      1.l     バッファアドレス
                18      1.l     バイト数
        out     (offset size)
                 3      1.b     エラーコード(下位)
                 4      1.b     エラーコード(上位)

        　バッファに指定バイト数だけ IOCTRL によりデータを読み込む。

コマンド $04    入力
        in      (offset size)
                 0      1.b     定数(26)
                 1      1.b     ユニット番号
                 2      1.b     コマンド(4)
                13      1.b     メディアバイト
                14      1.l     バッファアドレス
                18      1.l     セクタ数
                22      1.l     開始セクタ番号
        out     (offset size)
                 3      1.b     エラーコード(下位)
                 4      1.b     エラーコード(上位)

        　指定されたセクタから、指定されたセクタ数だけバッファに読み込む。

コマンド $05    ドライブ制御/状態検査
        in      (offset size)
                 0      1.b     定数(26)
                 1      1.b     ユニット番号
                 2      1.b     コマンド(5)
                13      1.b     内部コマンド
                14      1.l     引数列のアドレス
        out     (offset size)
                 3      1.b     エラーコード(下位)
                 4      1.b     エラーコード(上位)
                13      1.b     ドライブの状態

        　ドライブの動作を指定し、状態を返す。内部コマンドは以下の通りで、これ
        は IOCS _B_DRVCHK の引数に相当する。

            $00     状態検査 1
            $01     排出(排出禁止状態なら無視)
            $02     排出禁止 1(ユーザ用)
            $03     排出許可 1(ユーザ用、排出禁止 1 を解除)
            $04     メディア未挿入時に LED 点灯
            $05     メディア未挿入時に LED 消灯
            $06     排出禁止 2(OS 用)
            $07     排出許可 2(OS 用、排出禁止 2 を解除)
            $09     状態検査 2

        　返値のドライブの状態は以下の通り。

        bit 7   LED 点灯
        bit 6   排出禁止
        bit 5   排出禁止 2(OS バッファ有り)
        bit 4   排出禁止 1(ユーザー指定)
        bit 3   書き込み禁止
        bit 2   ドライブノットレディ
        bit 1   メディア挿入
        bit 0   メディア誤挿入

        　ただし、ノットレディとライトプロテクトはコマンド 0 の場合のみ有効。
        　また、この時メディア未挿入なら両方のビットが 1 になる。

コマンド $08    出力(verify off)
        in      (offset size)
                 0      1.b     定数(26)
                 1      1.b     ユニット番号
                 2      1.b     コマンド(8)
                14      1.l     データアドレス
                18      1.l     セクタ数
                22      1.l     開始セクタ番号
        out     (offset size)
                 3      1.b     エラーコード(下位)
                 4      1.b     エラーコード(上位)

        　指定されたセクタに、指定されたセクタ数だけデータを書き込む。

コマンド $09    出力(verify on)
        in      (offset size)
                 0      1.b     定数(26)
                 1      1.b     ユニット番号
                 2      1.b     コマンド(9)
                14      1.l     データアドレス
                18      1.l     セクタ数
                22      1.l     開始セクタ番号
        out     (offset size)
                 3      1.b     エラーコード(下位)
                 4      1.b     エラーコード(上位)

        　指定されたセクタに、指定されたセクタ数だけデータを書き込む。書き出し
        た後にそのデータを読み込んで、実際に書き出せている事を確認する。

コマンド $0c    IOCTRL による出力
        in      (offset size)
                 0      1.b     定数(26)
                 1      1.b     ユニット番号
                 2      1.b     コマンド(12)
                14      1.l     データアドレス
                18      1.l     バイト数
        out     (offset size)
                 3      1.b     エラーコード(下位)
                 4      1.b     エラーコード(上位)

        　データを指定バイト数だけ IOCTRL によりデバイスに書き込む。

コマンド $13    特殊 IOCTRL による制御
        in      (offset size)
                 0      1.b     定数(26)
                 1      1.b     ユニット番号
                 2      1.b     コマンド(19)
                14      1.l     バッファアドレス
                18      1.w     内部コマンド
        out     (offset size)
                 3      1.b     エラーコード(下位)
                 4      1.b     エラーコード(上位)

        　デバイスドライバの特殊制御を行う。処理内容はデバイスドライバによって
        異なる。

==============================================================================

・デバイスドライバ(リモートドライブ)

　リモートドライブのデバイスドライバはコマンド $40～$58 が使用される。ただし、
ベリファイを行う場合はコマンドの最上位ビットを 1 にして $c0～$d8 が使用される。

コマンド $40    初期化
        in      (offset size)
                 0      1.b     定数(22)
                 2      1.b     コマンド($40/$c0)
                18      1.l     パラメータアドレス
                22      1.b     ドライブ番号
        out     (offset size)
                 3      1.b     エラーコード(下位)
                 4      1.b     エラーコード(上位)
                13      1.b     ユニット数
                14      1.l     デバイスドライバの終了アドレス+1

        　ローカルドライブのコマンド 0 と同様に組み込み時に呼ばれるが、BPB 及
        びそのポインタの配列を用意する必要はない。

コマンド $41    ディレクトリ検索
        in      (offset size)
                 0      1.b     定数(26)
                 1      1.b     ユニット番号
                 2      1.b     コマンド($41/$c1)
                14      1.l     ディレクトリ名バッファ(namests 形式)
        out     (offset size)
                 3      1.b     エラーコード(下位)
                 4      1.b     エラーコード(上位)
                18      1.l     リザルトステータス

        　指定されたディレクトリが存在するか調べる。ローカルドライブで実行され
        る、ディレクトリの検査と共にその先頭 FAT を収得するルーチンに相当する
        が、リモートドライブの場合は FAT 番号を返す必要はない。

コマンド $42    ディレクトリ作成
        in      (offset size)
                 0      1.b     定数(26)
                 1      1.b     ユニット番号
                 2      1.b     コマンド($42/$c2)
                14      1.l     ディレクトリ名バッファ(namests 形式)
        out     (offset size)
                 3      1.b     エラーコード(下位)
                 4      1.b     エラーコード(上位)
                18      1.l     リザルトステータス

        　指定されたディレクトリを作成する。既に同名のディレクトリが存在した場
        合はエラーを返すこと。

コマンド $43    ディレクトリ削除
        in      (offset size)
                 0      1.b     定数(26)
                 1      1.b     ユニット番号
                 2      1.b     コマンド($43/$c3)
                14      1.l     ディレクトリ名バッファ(namests 形式)
        out     (offset size)
                 3      1.b     エラーコード(下位)
                 4      1.b     エラーコード(上位)
                18      1.l     リザルトステータス

        　指定されたディレクトリを削除する。ディレクトリ内にファイルがある場合
        はエラーを返すこと。

コマンド $44    ファイル名変更
        in      (offset size)
                 0      1.b     定数(26)
                 1      1.b     ユニット番号
                 2      1.b     コマンド($44/$c4)
                14      1.l     旧ファイル名バッファ(namests 形式)
                18      1.l     新ファイル名バッファ(namests 形式)
        out     (offset size)
                 3      1.b     エラーコード(下位)
                 4      1.b     エラーコード(上位)
                18      1.l     リザルトステータス

        　ファイル名を変更する。パスが違う場合はディレクトリも移動する。新ファ
        イル名が既に存在する場合はエラーを返すこと。ディレクトリ・ボリュームラ
        ベル・隠しファイル・書き込み禁止ファイルは移動できず、またシステムファ
        イル・書き込み禁止ファイルはファイル名を変更できない(システムファイル
        のディレクトリを移動しながらのファイル名変更は可能)。

コマンド $45    ファイル削除
        in      (offset size)
                 0      1.b     定数(26)
                 1      1.b     ユニット番号
                 2      1.b     コマンド($45/$c5)
                14      1.l     ファイル名バッファ(namests 形式)
        out     (offset size)
                 3      1.b     エラーコード(下位)
                 4      1.b     エラーコード(上位)
                18      1.l     リザルトステータス

        　指定されたファイルを削除する。ディレクトリ・ボリュームラベル・システ
        ムファイル・書き込み禁止ファイルは削除できない。

コマンド $46    ファイル属性収得/設定
        in      (offset size)
                 0      1.b     定数(26)
                 1      1.b     ユニット番号
                 2      1.b     コマンド($46/$c6)
                13      1.b     設定する属性(-1 なら収得)
                14      1.l     ファイル名バッファ(namests 形式)
        out     (offset size)
                 3      1.b     エラーコード(下位)
                 4      1.b     エラーコード(上位)
                18      1.l     リザルトステータス

        　ファイルの属性を収得/設定する。

コマンド $47    FILES
        in      (offset size)
                 0      1.b     定数(26)
                 1      1.b     ユニット番号
                 2      1.b     コマンド($47/$c7)
                13      1.b     検索属性
                14      1.l     ファイル名バッファ(namests 形式)
                18      1.l     検索バッファ(files 形式)
        out     (offset size)
                 3      1.b     エラーコード(下位)
                 4      1.b     エラーコード(上位)
                18      1.l     リザルトステータス

        　ディレクトリから指定ファイルを検索する。DOS _FILES から呼び出される。
        　検索に失敗した場合、若しくは検索に成功してもワイルドカードが使われて
        いない場合は、次回検索時に必ず失敗させる為に検索バッファのオフセットに
        -1 を書き込む。検索が成功した場合は見つかったファイルの情報を設定する
        と共に、次検索用の情報のセクタ番号、オフセット、ルートディレクトリの場
        合は更に残りセクタ数を設定する。検索ドライブ・属性、パス名は DOS コー
        ル処理内で設定されるので書き込む必要はない。

コマンド $48    NFILES
        in      (offset size)
                 0      1.b     定数(26)
                 1      1.b     ユニット番号
                 2      1.b     コマンド($48/$c8)
                18      1.l     検索バッファ(files 形式)
        out     (offset size)
                 3      1.b     エラーコード(下位)
                 4      1.b     エラーコード(上位)
                18      1.l     リザルトステータス

        　ディレクトリから指定ファイルを検索する。DOS _NFILES から呼び出される。
        　オフセットが -1 になっていたらエラーを返す他は FILES と同じ。

コマンド $49    ファイル作成
        in      (offset size)
                 0      1.b     定数(26)
                 1      1.b     ユニット番号
                 2      1.b     コマンド($49/$c9)
                13      1.b     ファイル属性
                14      1.l     ファイル名バッファ(namests 形式)
                18      1.l     モード(0:newfile 1:create)
                22      1.l     FCB
        out     (offset size)
                 3      1.b     エラーコード(下位)
                 4      1.b     エラーコード(上位)
                18      1.l     リザルトステータス

        　指定されたファイルを作成する。newfile モードで同名ファイルが既に存在
        していたらエラーを返し、create モードでは既存ファイルを削除してからフ
        ァイルを作成する。また、ボリュームラベルを作成する場合はデータが書き込
        まれる事はないのでクラスタを確保しない。

コマンド $4a    ファイルオープン
        in      (offset size)
                 0      1.b     定数(26)
                 1      1.b     ユニット番号
                 2      1.b     コマンド($4a/$ca)
                14      1.l     ファイル名バッファ(namests 形式)
                22      1.l     FCB
        out     (offset size)
                 3      1.b     エラーコード(下位)
                 4      1.b     エラーコード(上位)
                18      1.l     リザルトステータス

        　指定されたファイルをオープンする。ディレクトリ・ボリュームラベルはオ
        ープン出来ない。システムファイル・書き込み禁止ファイルは読み込みモード
        でのみオープンできる。
        　オープンに成功した場合はファイル名、更新日時、ファイルサイズを FCB
        に設定すること。

コマンド $4b    ファイルクローズ
        in      (offset size)
                 0      1.b     定数(26)
                 1      1.b     ユニット番号
                 2      1.b     コマンド($4b/$cb)
                22      1.l     FCB
        out     (offset size)
                 3      1.b     エラーコード(下位)
                 4      1.b     エラーコード(上位)
                18      1.l     リザルトステータス

        　指定されたファイルをクローズする。最終変更時刻を更新すること。

コマンド $4c    ファイル読み込み
        in      (offset size)
                 0      1.b     定数(26)
                 1      1.b     ユニット番号
                 2      1.b     コマンド($4c/$cc)
                14      1.l     バッファアドレス
                18      1.l     バイト数
                22      1.l     FCB
        out     (offset size)
                 3      1.b     エラーコード(下位)
                 4      1.b     エラーコード(上位)
                18      1.l     リザルトステータス

        　ファイルから指定バイト数だけ読み込む。

コマンド $4d    ファイル書き込み
        in      (offset size)
                 0      1.b     定数(26)
                 1      1.b     ユニット番号
                 2      1.b     コマンド($4d/$cd)
                14      1.l     データアドレス
                18      1.l     バイト数
                22      1.l     FCB
        out     (offset size)
                 3      1.b     エラーコード(下位)
                 4      1.b     エラーコード(上位)
                18      1.l     リザルトステータス

        　ファイルに指定バイト数だけ書き込む。

コマンド $4e    ファイルシーク
        in      (offset size)
                 0      1.b     定数(26)
                 1      1.b     ユニット番号
                 2      1.b     コマンド($4e/$ce)
                13      1.b     モード(0:先頭から 1:現在位置から 2:末尾から)
                18      1.l     オフセット
                22      1.l     FCB
        out     (offset size)
                 3      1.b     エラーコード(下位)
                 4      1.b     エラーコード(上位)
                18      1.l     リザルトステータス

        ファイルポインタを移動する。

コマンド $4f    ファイル更新時刻の収得/設定
        in      (offset size)
                 0      1.b     定数(26)
                 1      1.b     ユニット番号
                 2      1.b     コマンド($4f/$cf)
                18      1.l     日付・時刻(0 なら収得)
                22      1.l     FCB
        out     (offset size)
                 3      1.b     エラーコード(下位)
                 4      1.b     エラーコード(上位)
                18      1.l     リザルトステータス

        　ファイルの最終変更日時を収得/設定する。特に問題がなければ FCB を操作
        するだけでよい。日時を変更した場合はファイル属性の更新フラグを立てるこ
        と。

コマンド $50    容量収得
        in      (offset size)
                 0      1.b     定数(26)
                 1      1.b     ユニット番号
                 2      1.b     コマンド($50/$d0)
                14      1.l     バッファアドレス
        out     (offset size)
                 3      1.b     エラーコード(下位)
                 4      1.b     エラーコード(上位)
                18      1.l     リザルトステータス

        　メディアの総容量/空き容量、クラスタ/セクタサイズを収得する。バッファ
        に書き込む内容は以下の通り。リザルトステータスとして使用可能なバイト数
        を返すこと。

        offset  size
        0       1.w     使用可能なクラスタ数
        2       1.w     総クラスタ数
        4       1.w     1 クラスタ当りのセクタ数
        6       1.w     1 セクタ当りのバイト数

コマンド $51    ドライブ制御/状態検査
        in      (offset size)
                 0      1.b     定数(26)
                 1      1.b     ユニット番号
                 2      1.b     コマンド($51/$d1)
                13      1.b     内部コマンド
                14      1.l     引数列のアドレス
        out     (offset size)
                 3      1.b     エラーコード(下位)
                 4      1.b     エラーコード(上位)
                13      1.b     ドライブの状態
                18      1.l     リザルトステータス

        　ドライブの動作を指定し、状態を返す。ブロックデバイスの場合と同じ。

コマンド $52    DPB 収得
        in      (offset size)
                 0      1.b     定数(26)
                 1      1.b     ユニット番号
                 2      1.b     コマンド($52/$d2)
                14      1.l     バッファアドレス(先頭アドレス+2 を指す)
        out     (offset size)
                 3      1.b     エラーコード(下位)
                 4      1.b     エラーコード(上位)
                18      1.l     リザルトステータス

        　指定メディアの情報を v1 形式 DPB で返す。このコマンドで設定する必要
        がある情報は以下の通り(括弧内は DOS コールが設定する)。ただし、バッフ
        ァアドレスはオフセット 2 を指したアドレスが渡されるので注意すること。

        offset  size
         0      1.b     (ドライブ番号)
         1      1.b     (ユニット番号)
         2      1.w     1 セクタ当りのバイト数
         4      1.b     1 クラスタ当りのセクタ数-1
         5      1.b     クラスタ→セクタのシフト数
                        bit 7 = 1 で MS-DOS 形式 FAT(16bit Intel 配列)
         6      1.w     FAT の先頭セクタ番号
         8      1.b     FAT 領域の個数
         9      1.b     FAT の占めるセクタ数(複写分を除く)
        10      1.w     ルートディレクトリに入るファイルの個数
        12      1.w     データ領域の先頭セクタ番号
        14      1.w     総クラスタ数+1
        16      1.w     ルートディレクトリの先頭セクタ番号
        18      1.l     (ドライバヘッダのアドレス)
        22      1.b     (小文字の物理ドライブ名)
        23      1.b     (DPB 使用フラグ:常に 0)
        24      1.l     (次の DPB のアドレス)
        28      1.w     (カレントディレクトリのクラスタ番号:常に 0)
        30      64.b    (カレントディレクトリ名)

        　なおリザルトステータスでエラーが返ると、DOS コールでは小文字の物理ド
        ライブ名、DPB 使用フラグ、カレントディレクトリ名を設定しない。

    ユーザー拡張
        　オフセット22の1バイトはローカルドライブではメディアバイトとして使用
        されているが、リモートドライブの場合はコマンド処理終了後に DOS コール
        により小文字の物理ドライブ名が書き込まれるため、任意の値を返すことはで
        きない。
        　(V)TwentyOne.sys 組み込み時は、ドライブ名が書き込まれてからコマンド
        が呼ばれるようにパッチがあたるため、コマンド処理内で値を書き込めば任意
        のメディアバイトを返すことができる。

コマンド $53    IOCTRL による入力
        in      (offset size)
                 0      1.b     定数(26)
                 1      1.b     ユニット番号
                 2      1.b     コマンド($53/$d3)
                13      1.b     メディアバイト
                14      1.l     バッファアドレス
                18      1.l     セクタ数
                22      1.l     開始セクタ番号
        out     (offset size)
                 3      1.b     エラーコード(下位)
                 4      1.b     エラーコード(上位)
                18      1.l     リザルトステータス

        　バッファに指定バイト数だけ IOCTRL によりデータを読み込む。

コマンド $54    IOCTRL による出力
        in      (offset size)
                 0      1.b     定数(26)
                 1      1.b     ユニット番号
                 2      1.b     コマンド($54/$d4)
                13      1.b     メディアバイト
                14      1.l     データアドレス
                18      1.l     セクタ数
                22      1.l     開始セクタ番号
        out     (offset size)
                 3      1.b     エラーコード(下位)
                 4      1.b     エラーコード(上位)
                18      1.l     リザルトステータス

        　データを指定バイト数だけ IOCTRL によりデバイスに書き込む。

コマンド $55    特殊 IOCTRL による制御
        in      (offset size)
                 0      1.b     定数(26)
                 1      1.b     ユニット番号
                 2      1.b     コマンド($55/$d5)
                14      1.l     バッファアドレス
                18      1.w     内部コマンド
        out     (offset size)
                 3      1.b     エラーコード(下位)
                 4      1.b     エラーコード(上位)
                18      1.l     リザルトステータス

        　デバイスドライバの特殊制御を行う。処理内容はデバイスドライバによって
        異なる。

コマンド $56    アボート
        in      (offset size)
                 0      1.b     定数(26)
                 1      1.b     ユニット番号
                 2      1.b     コマンド($56/$d6)
        out     (offset size)
                 3      1.b     エラーコード(下位)
                 4      1.b     エラーコード(上位)
                18      1.l     リザルトステータス

        　DOS _FFLUSH が実行された時にドライブごとに呼び出される。fflush = off
        の時は呼び出されない。キャッシュの破棄などを行う。

コマンド $57    メディア交換検査
        in      (offset size)
                 0      1.b     定数(26)
                 1      1.b     ユニット番号
                 2      1.b     コマンド($57/$d7)
        out     (offset size)
                 3      1.b     エラーコード(下位)
                 4      1.b     エラーコード(上位)
                18      1.l     リザルトステータス

        　メディアが交換されたか否かを調べる。交換されていた場合のフォーマット
        確認はこのコマンド内で行うこと。

コマンド $58    排他制御の確認
        in      (offset size)
                 0      1.b     定数(26)
                 1      1.b     ユニット番号
                 2      1.b     コマンド($58/$d8)
                13      1.b     モード(0:設定 1:解除)
                14      1.l     バイト数
                18      1.l     オフセット
                22      1.l     FCB
        out     (offset size)
                 3      1.b     エラーコード(下位)
                 4      1.b     エラーコード(上位)
                18      1.l     リザルトステータス

        　DOS _LOCK が実行された時に呼び出される。実際のファイル排他制御は全て
        DOS コールの処理内で行われるので、特に問題がなければ正常終了すること。

==============================================================================

・DISK2HD

　Human68k 内蔵のデバイスドライバ、DISK2HD には以下の固有機能がある。

コマンド $03    IOCTRL による入力
        　指定されたバッファにメディア判別ルーチン/メディア交換フラグ初期化ル
        ーチンへの分岐命令(jmp abs.l)を収得する。バッファは 12 バイト必要で、
        内容は以下の通り。

        offset  size
        0       6.b     jmp ??? (メディア判別ルーチンへの分岐命令)
        6       6.b     jmp ??? (メディア交換フラグ初期化ルーチンへの分岐命令)

コマンド $0c    IOCTRL による出力
        　メディア判別ルーチンへの分岐命令(jmp abs.l)を設定する。データの内容
        は以下の通りで、データは 6バイト必要。

        offset  size
        0       6.b     jmp ??? (メディア判別ルーチンへの分岐命令)

コマンド $13    特殊 IOCTRL による制御
        　内部コマンドによって以下の入出力を行う。

        内部コマンド $0000
                　メディアバイトを収得する。バッファは 2 バイト必要。メディア
                バイトはワードサイズで返り、その上位バイトは常に 0 となる。

        内部コマンド $0001
                　装置情報を収得する。バッファは 18 バイト必要で、内容は以下の
                通り。

                offset  size
                 0      1.l     IOCS _B_READID の返値
                 4      1.w     1 セクタ当りのバイト数          ┐
                 6      1.b     1 クラスタ当りのセクタ数        │
                 7      1.b     FAT 領域の個数                  │
                 8      1.w     予約セクタ数                    │BPB
                10      1.w     ルートディレクトリのエントリ数  │
                12      1.w     全領域のセクタ数                │
                14      1.b     メディアバイト                  │
                15      1.b     FAT 領域 1 個当りのセクタ数     ┘
                16      1.b     ユニット番号(?)
                17      1.b     メディア交換フラグ

        内部コマンド $0002
                　メディア交換フラグを設定する。データは 1 バイト必要で、-1 な
                ら前回のアクセスからメディア交換あり、1 なら交換なしを表わす。
                0 であれば IOCS 依存に戻す。

        内部コマンド $ffff(-1)
                　デバイスドライバの種類/バージョンを収得する。バッファは 8 バ
                イト必要。Human68k version 3.02 の場合、バッファには'DISKdev1'
                が返る。

==============================================================================

・CLOCK

　Human68k 内蔵のデバイスドライバ、CLOCK は現在日時の収得/設定をする為のデバイ
スドライバで、Human68k から直接呼び出される。このデバイスがサポートするコマン
ドは通常の入出力だけであるが、対象を日付と時刻のどちらかに選択する為に内部コマ
ンドを必要とする。また、入出力のサイズは 4 バイト固定となっている。

コマンド $04    入力
        in      (offset size)
                 0      1.b     定数(26)
                 2      1.b     コマンド(4)
                14      1.l     バッファアドレス
                22      1.l     内部コマンド(0:日付の収得 0 以外:時刻の収得)
        out     (offset size)
                 3      1.b     エラーコード(下位)
                 4      1.b     エラーコード(上位)

        　バッファに 4 バイトの日付もしくは時刻をバイナリ形式(IOCS _B_TIMEBIN/
        _DATEBIN の返値)で返す。

コマンド $08    出力(verify off)
コマンド $09    出力(verify on)
        in      (offset size)
                 0      1.b     定数(26)
                 2      1.b     コマンド(8)
                14      1.l     データアドレス
                22      1.l     内部コマンド(0:日付の設定 0 以外:時刻の設定)
        out     (offset size)
                 3      1.b     エラーコード(下位)
                 4      1.b     エラーコード(上位)

        　日付もしくは時刻を 4 バイトのバイナリ形式(IOCS _TIMESET/DATESET の引
        数)で指定された値に設定する。

==============================================================================
