        - PROGRAMMER'S MANUAL -

==============================================================================

・ユーザープログラム起動後の状態

レジスタ

a0      メモリ管理ポインタのアドレス
a1      プログラムの終わり+1 のアドレス
a2      コマンドラインのアドレス
a3      環境のアドレス
a4      プログラムの実行開始アドレス
sr      ユーザーモード
usp     親のスタック
ssp     システムのスタック
その他  不定

メモリ
    　確保できる最大のメモリが割り当てられている。

コマンドラインの構造
    　LASCIIZ 形式。先頭1バイトに文字列の長さがあり、その後に文字列が続き、文
    字列の終端には0が付けられる。

環境
    　親プロセスから指定された環境変数領域のアドレスがそのまま渡される。そのた
    め、親プロセスが自分自身の領域を指定した場合にDOS _SETENV で内容を変更する
    と、親の環境変数も変更される。
    　子プロセスに異なる環境変数領域を渡す場合は、別にメモリを確保し新しい領域
    を用意する。
    　環境変数領域が確保されていない場合は-1となる。一般的な使用状況ではシェル
    が確保した領域が渡されるが、例えばCONFIG.SYSにおいてENVSET=行を指定せずに
    PROGRAM=行から実行した場合には-1となる。

環境の構造
    　先頭4バイトに環境変数領域の大きさが示される。
    　各環境変数は1バイトの0によって区切られ、環境変数の終端には更にもう1バイ
    トの0が付けられる。

==============================================================================

・メモリ管理ポインタ

offset  size
0       1.l     前のメモリ管理ポインタ(0なら先頭)
4       1.l     このメモリを確保したプロセスのメモリ管理ポインタ(0なら親はない)
8       1.l     このメモリブロックの終わり+1のアドレス
12      1.l     次のメモリ管理ポインタ(0なら終わり)

    　メモリ管理ポインタは必ず下位4ビットが0のアドレス(16バイト境界)から始まる。
    また先頭のメモリ管理ポインタは OS 本体のスーパバイザ領域内に存在する。

    　4バイト目(メモリを確保したプロセス)の最上位バイトが以下の値の場合、その
    メモリブロックの属性を表わす。

        $ff     常駐プロセス(KEEP)
        $fe     不明(MEMDRV)
        $fd     サブメモリブロック

    　常駐プロセスの場合は最上位バイト以外の下位3バイトの値に意味はない(常駐終
    了した時点で親プロセスが生存している保証もなくなるため)。

    　4バイト目(メモリを確保したプロセス)の値を遡ると最上位のプロセスにたどり
    着く。メインのスレッドの場合はスーパーバイザ領域内の OS となる。常駐終了し
    たプロセスから作成されたスレッドの場合は、その常駐終了したプロセスが最上位
    となる。

==============================================================================

・プロセス管理ポインタ(256 バイト)

offset  size
$0000    1.l    前のメモリ管理ポインタ(0 なら先頭)              ┐
$0004    1.l    親プロセスのプロセス管理ポインタ(0 なら親はない)│メモリ管理
$0008    1.l    このメモリブロックの終わり+1 のアドレス         │    ポインタ
$000c    1.l    次のメモリ管理ポインタ(0 なら終わり)            ┘

$0010    1.l    環境のアドレス(-1 なら確保されていない)
$0014    1.l    終了時の戻りアドレス
$0018    1.l    CTRL+C により中断された際の戻りアドレス
$001c    1.l    エラーにより中断された際の戻りアドレス
$0020    1.l    コマンドラインのアドレス
$0024   12.b    プロセスのファイルハンドラの使用状況
                ($24～$2f の bit 0～7 の順で使用中 = 1 となる)
$0030    1.l    BSS の先頭アドレス
$0034    1.l    ヒープの先頭アドレス(BSS と同じ)
$0038    1.l    初期スタックアドレス(ヒープの終わり+1)
$003c    1.l    親プロセスの USP
$0040    1.l    親プロセスの SSP
$0044    1.w    親プロセスの SR
$0046    1.w    アボート時の SR
$0048    1.l    アボート時の SSP
$004c    1.l    trap #10 のベクタ
$0050    1.l    trap #11 のベクタ
$0054    1.l    trap #12 のベクタ
$0058    1.l    trap #13 のベクタ
$005c    1.l    trap #14 のベクタ
$0060    1.l    shell 起動フラグ(0:通常の起動 -1:shell として起動)
$0064    1.b    モジュール番号
$0065    3.b    (未使用)
$0068    1.l    ロードした子プロセスのメモリ管理ポインタ
$006c    1.b    060turbo.sys: デバイス呼び出し時にキャッシュプッシュするか
$006d    1.b    060turbo.sys: アロケート領域制限(0～8)
$006e    1.b    060turbo.sys: 本体メモリブロックのキャッシュモード
$006f    1.b    060turbo.sys: アロケートしたメモリブロックのキャッシュモード
$0070    4.l    (未使用)
$0080    2.b    実行ファイルのドライブ名
$0082   66.b    実行ファイルのパス名
$00c4   24.b    実行ファイルのファイル名
$00dc    9.l    (未使用)

$0100           (プログラム先頭)

==============================================================================

・メモリマップ

address
$0000_0000      例外ベクタテーブル(メーカー予約  :$00～$3f)
$0000_0100              〃        (ユーザ割り込み:$40～$ff)
$0000_0400      IOCS コールのベクタテーブル
$0000_0800      IOCS ワーク
$0000_1000      ROM デバッガ ワーク(1)
$0000_1800      DOS コールのベクタテーブル
$0000_1c00      Human68k ワーク
$0000_2000      FD IPL / HD IPL MENU
$0000_2400      HD IPL
$0000_2800      ROM デバッガ ワーク(2)
$0000_3800      未使用(HD IPL は起動時に $2400 以降も使用する)
$0000_6800      Human68k / SSP

$00c0_0000      GV-RAM(2MB)
$00e0_0000      TV-RAM(512KB)
$00e8_0000      CRTC
$00e8_2000      VC
$00e8_4000      DMAC
$00e8_6000      エリアセット
$00e8_8000      MFP
$00e8_a000      RTC
$00e8_c000      プリンタ
$00e8_e000      システムポート
$00e9_0000      OPM
$00e9_2000      ADPCM
$00e9_4000      FDC
$00e9_6000      SPC(SCSI 機種) / HDC(SASI 機種)
$00e9_8000      SCC
$00e9_a000      i8255(ジョイスティック)
$00e9_c000      I/O コントローラ
$00e9_e000      コプロセッサ I/O 0
$00e9_e080      〃               1
$00ea_0000      SCSI ボード(SPC ポート及び SCSI ROM,8KB)
$00ea_ff80      拡張エリアセット(X68030)
$00ec_0000      ユーザー I/O(拡張ボードで使用可,64KB)
$00ed_0000      SRAM(16KB)
$00ed_4000      予備(48KB)
$00ee_0000      未使用(128KB)
$00f0_0000      CGROM(768KB)

(X68000 SASI)
$00fc_0000      $fe0000～$ffffff と同じ内容が読み出される。
$00fe_0000      ROM Debugger
$00fe_4fc0      ROM Human IPL
$00fe_5000      Human68k version 1.00
$00ff_0000      IPL / ROM IOCS
$00ff_dc00      ROM DISK

(X68000 SCSI)
$00fc_0000      SCSI IOCS / SCSI IPL(8KB)
$00fe_0000      ROM Debugger            (SASI 機種と同一)
$00fe_4fc0      ROM Human IPL           (       〃      )
$00fe_5000      Human68k version 1.00   (       〃      )
$00ff_0000      IPL / ROM IOCS(64KB)

(X68030)
$00fc_0000      SCSI IPL ヘッダ部(512byte)
$00fc_0200      Human68k version 2.15
$00fc_e000      FLOAT2.X version 2.02
$00fd_3800      ROM Debugger
$00ff_0000      IPL / ROM IOCS / SCSI IOCS(64KB)

$0100_0000～    予約

注意    リセット直後のみ $0000～$ffff は $ff0000～$ffffff と同じ内容が読める。

==============================================================================

・CRTC

address size
$e80000 1.w     R00     水平トータル            ┐
$e80002 1.w     R01     水平同期終了位置        │水平タイミング制御
$e80004 1.w     R02     水平表示開始位置        │
$e80006 1.w     R03     水平表示終了位置        ┘
$e80008 1.w     R04     垂直トータル            ┐
$e8000a 1.w     R05     垂直同期終了位置        │垂直タイミング制御
$e8000c 1.w     R06     垂直表示開始位置        │
$e8000e 1.w     R07     垂直表示終了位置        ┘
$e80010 1.w     R08     外部同期水平アジャスト  : 水平位置微調整
$e80012 1.w     R09     ラスタ番号              : ラスタ割り込み用
$e80014 1.w     R10     X 位置                  ┐テキスト画面スクロール
$e80016 1.w     R11     Y 位置                  ┘
$e80018 1.w     R12     X0                      ┐
$e8001a 1.w     R13     Y0                      │
$e8001c 1.w     R14     X1                      │
$e8001e 1.w     R15     Y1                      │グラフィック画面スクロール
$e80020 1.w     R16     X2                      │
$e80022 1.w     R17     Y2                      │
$e80024 1.w     R18     X3                      │
$e80026 1.w     R19     Y3                      ┘
$e80028 1.w     R20     メモリモード/表示モード制御
$e8002a 1.w     R21     同時アクセス/ラスタコピー/高速クリアプレーン撰択
$e8002c 1.w     R22     ラスタコピー動作用      : ラスタ番号
$e8002e 1.w     R23     テキスト画面アクセスマスクパターン
$e80481 1.b     動作    画像取り込み/高速クリア/ラスタコピー制御

==============================================================================

・ビデオコントローラ

address size
$e82000  256.w  グラフィックパレット
$e82200   16.w  テキストパレット   (パレットブロック 0)
$e82220  240.w  スプライトパレット ( 〃 1～15)
$e82400    1.w  R0 (画面モード設定)
$e82500    1.w  R1 (プライオリティ制御)
$e82600    1.w  R2 (特殊プライオリティ/画面表示)

==============================================================================

・システムポート

address
$e8e001 #1      コントラスト
                bit 3～0        CONTRAST        0:暗い～$f:明るい
$e8e003 #2      ディスプレイ／3D スコープ
                bit 3           TV CTRL    Read 0:ディスプレイの電源 ON 1:OFF
                                          Write 0:Display 制御信号 0    1:同 1
                bit 1           3D-L            0:3Dｽｺ-ﾌﾟ左ｼｬｯﾀ- CLOSE  1:OPEN
                bit 0           3D-R            0:〃     右〃    CLOSE  1:OPEN
$e8e005 #3      カラーイメージユニット(bit 4～0)
$e8e007 #4      キーボード／NMI／ドットクロック
                bit 3           KEY CTRL   Read 0:キーボード非接続      1:接続
                                          Write 0:キーデータ送信不可    1:許可
                bit 2           NMI RESET       0:NMI リセットしない    1:する
                bit 1           HRL             0:分周比 1/2,1/3,1/6
                                                1:       1/2,1/4,1/8
$e8e009 #5      ROM/DRAM ウェイト
                bit 7～4        ROM  Wait Control
                bit 3～0        DRAM Wait Control
                                ウェイト数は設定値＋2。ただし、DRAM アクセスは
                                スタティックカラム動作中 0、ページ間をまたぐ時
                                は 4。
$e8e00b #6      MPU 種別／動作クロック
                bit 7～4        MPU Type
                                  $f:68000 $e:68020 $d:68030 $c:68040
                bit 3～0        MPU Clock(MHz)
                                  $f:10 $e:16 $d:20 $c:25 $b:33 $a:40 $9:50
$e8e00d #7      SRAM 書き込み
                bit 7～0        SRAM Write Enable Control
                                $31 で SRAM 書き込み可能。
$e8e00f #8      本体電源 OFF
                bit 3～0        Power Off Control
                                $00,$0f,$0f の順に書き込むと電源 OFF。

==============================================================================

・SRAM

アドレス  size  内容(初期値)
$00ed0000  8.b  メモリチェックデータ('Ｘ68000W')
$00ed0008  1.l  実装メインメモリ容量
                  (SASI機種:$0010_0000 SCSI機種:$0020_0000 X68030:$0040_0000)
$00ed000c  1.l  ROM 起動アドレス(1.l)へのポインタ($00fc_0000)
                  $00fc_nnnn の場合 ID=nnnn/4 の SCSI から起動する。
$00ed0010  1.l  SRAM 起動アドレス($00ed_0100)
$00ed0014  1.l  アラームで起動後、電原オフまでの時間(-1)。分単位。
                  IOCS _ALARMSET で指定された引数 d2.l-1 の値が保存される。
$00ed0018  1.w  最優先ブートデバイス(0)。
                  $0000: STD(2HD → HD → ROM → RAM)
                  $8n00: SASI-HD n  (n はドライブ番号)
                  $9n70: 2HD n
                  $a000: ROM(通常は SCSI ROM)
                  $b000: RAM(通常は SRAM)
                  上記以外の値は STD と見なされる。STD 以外から起動できなかっ
                  た場合はSTD で起動を試みる。
$00ed001a  1.w  RS-232C の設定($4e07)。IOCS _SET232C の引数と同じ。
                  bit 15～14: ストップビット(0,3:2bit  1:1bit  2:1.5bit)
                  bit 13～12: パリティ(0,2:なし  1:奇数  3:偶数)
                  bit 11～10: ビット長(0:5bit  1:6bit  2:7bit  3:8bit)
                  bit      9: XON/XOFF 処理(0:OFF  1:ON)
                  bit      8: SI/SO 処理(0:OFF  1:ON) ※使用禁止
                  bit  3～ 0: 転送速度(bps、0:75  1:150  2:300  3:600  4:1200
                              5:2400  6:4800  7:9600)
                              (X68030 のみ 8:17361 も指定可能)
$00ed001c  1.b  起動時のキー LED の状態(0)。電原オフ時の状態が待避されている。
                  bit 7: 未使用
                  bit 6: 全角      それぞれ %0:消灯  %1:点灯
                  bit 5: ひらがな
                  bit 4: INS
                  bit 3: CAPS
                  bit 2: コード入力
                  bit 1: ローマ字
                  bit 0: かな
$00ed001d  1.b  起動時の画面モード(16)。IOCS CRTMOD に指定する引数 d1.w の値。
                  ROM IOCS 内のエラー表示ルーチンはモード16しか対応していない
                  ので、できるだけ16以外の値は設定しないこと。
                  Human68k は常にモード16で起動する。
$00ed001e  1.l  アラームで起動した時の動作(0)。
                  IOCS _ALARMSET で指定した引数 a1.l の値。
                  0       : 普通に立ち上がる(指定のメディアからブート)。オフす
                            るまでの時間が-1以外なら、指定時間後本体をオフ。
                  $01～$3f: テレビをコントロールする。オフするまでの時間が-1な
                            ら1分後本体のみオフ。それ以外なら指定時間後本体と
                            テレビをオフ。
                  $40～   : $0000_0040～$00ff_ffff までのアドレス指定。先頭バ
                            イトが $60 ならスーパーバイザのままそのアドレスを
                            コールし、そのサブルーチンから戻ると本体をオフ。
                  -1      : 普通に立ち上がる(指定のメディアからブート)。テレビ
                            の制御はしない。オフするまでの時間が-1以外なら、指
                            定時間後本体をオフ。
$00ed0022  1.l  アラームで起動する時間($ffff_0000)。
                  IOCS _ALARMSET で指定した引数 d1.l の値。
                  bit 31～28: 未使用(0)
                  bit 27～24: 曜日(0～6)
                  bit 23～16: 日($01～$31、BCD 2桁)
                  bit 15～ 8: 時($00～$23、BCD 2桁)
                  bit  7～ 0: 分($00～$59、BCD 2桁)
                  曜日に $f、日時分に $ff を指定すると無指定となる。
$00ed0026  1.b  アラームの禁止/許可(7)  0:許可  7:禁止
$00ed0027  1.b  OPT.2 キーをテレビコントロールに使用するか(0)。
                  0:使用する  1:しない
$00ed0028  1.b  コントラストのシステム既定値(14)。0～15。
$00ed0029  1.b  本体オフ時に FD をイジェクトするか(0)。  0:しない  1:する
$00ed002a  1.b  本体オフ時に行うテレビコントロールのコード($0d)
$00ed002b  1.b  キーボードの配列(0)。  0:JIS配列  1:あいうえお配列
$00ed002c  1.b  電卓の文字フォント(0)。  0:LCD  1:通常のフォント
$00ed002d  1.b  SRAM 使用状態(0)。  0:未使用  1:SRAMDISK  2:プログラム
$00ed002e  1.w  テキストパレット0のシステム規定値($0000)
$00ed0030  1.w  テキストパレット1のシステム規定値($f83e)
$00ed0032  1.w  テキストパレット2のシステム規定値($ffc0)
$00ed0034  1.w  テキストパレット3のシステム規定値($fffe)
$00ed0036  1.w  テキストパレット4～ 7のシステム規定値($de6c)
$00ed0038  1.w  テキストパレット8～15のシステム規定値($4022)
$00ed003a  1.b  キーのオートリピートが始まるまでの時間(3)。0～15。200+100N[ms]
$00ed003b  1.b  キーのリピート間隔(2)。                    0～15。30+5N^2[ms]
$00ed003c  1.l  プリンタタイムアウト時間($0008_0000)
$00ed0040  1.l  SRAM が初期化されてから前回までの積算稼働時間(0)。分単位。
                  本体オフ及びソフトウェアリセットごとに積算される。
$00ed0044  1.l  SRAM が初期化されてから本体がオフされた回数(0)
                  本体オフごとに加算される。
$00ed0048  1.l  ROMDISK FAT 開始番地(X68000:$00ff_dc00  X68030:$00ff_f400)
$00ed004c  1.w  ROM DISK BPB: 1セクタ当りのバイト数(1024)
$00ed004e  1.b  ROM DISK BPB: 1クラスタ当りのセクタ数(1)
$00ed004f  1.b  ROM DISK BPB: FAT 領域の個数(1)
$00ed0050  1.w  ROM DISK BPB: 予約領域の個数(0)
$00ed0052  1.w  ROM DISK BPB: ルートディレクトリのエントリ数(32)
$00ed0054  1.w  ROM DISK BPB: 全領域のセクタ数(X68000:9  X68030:3)
$00ed0056  1.b  ROM DISK BPB: メディアバイト($f9)
$00ed0057  1.b  ROM DISK BPB: FAT 領域1個当りのセクタ数(1)
$00ed0058  1.b  ROM デバッガの使用(0)。  $00:OFF  $ff:ON
$00ed0059  1.b  $7c,$7e,$5c(\~|) の文字変換フラグ(0)
                  bit 2: $7c の変換  %0:｜  %1:｜(破線)
                  bit 1: $7e の変換  %0:￣  %1:～
                  bit 0: $5c の変換  %0:￥  %1:＼
$00ed005a  1.b  SASI-HD 接続台数(0)。0～15。
                  指定台数以上は IOCS レベルでエラーになる。
$00ed005b  1.b  システム予約(0)
$00ed005c  1.w  RSDRV.SYS: 拡張 RS-232C 設定(未使用時 0、使用時の初期値 $4e07)
$00ed005e  1.w  RSDRV.SYS: 同上。  それぞれ内容は $00ed001a を参照のこと。
$00ed0060  1.w  RSDRV.SYS: 同上。  ただし bit 3～0 = 8 の場合は 19200bps
$00ed0062  1.w  RSDRV.SYS: 同上。
$00ed0064 11.b  システム予約(0)
$00ed006f  1.b  SCSI: SCSI 適用フラグ($00)。  $00:無効  $56='V':有効
$00ed0070  1.b  SCSI: SCSI 関係フラグ(0)。bit 7～4 は X68030 以降で有効。
                        bit 7: DMA 一回あたりの転送語数
                                 (%0:256バイト %1:$cc0 で可変、通常 512バイト)
                        bit 6: ブート時のデバイスタイプの無視
                                 (%0:0,4,5,7,$84 のみブート
                                  %1:デバイスタイプを無視する)
                        bit 5: DMA バーストモード(現在は %0 固定)
                                 (%0:オートリクエスト最大速度
                                  %1:初回オートリクエスト、以後は外部要求転送)
                        bit 4: 転送モード(%0:DMA 転送  %1:MPU 転送)
                        bit 3: SCSI の種類(%0:内蔵  %1:拡張ボード)
                        bit 2～0: 本体の ID 番号
$00ed0071  1.b  SCSI: SASI フラグ(0)。SCSI に SASI ディスクを接続した時に SASI
                      の ID に対応するビットを %1 にする。
$00ed0072  2.b  SX-WINDOW: SX-WINDOW 環境フラグ($0000)。'SX' で使用中。
$00ed0074  1.b  SX-WINDOW: マウスポインタの移動量(0、使用時 6)。
                             遅 $03～$0a 速
$00ed0075  1.b  SX-WINDOW: マウスのダブルクリック間隔(0、使用時 6)。
                             短 $00～$0c 長
$00ed0076  1.b  SX-WINDOW: テキストパレット色相(0、使用時 96)。  H($00～$bf)
$00ed0077  1.b  SX-WINDOW: テキストパレット彩度(0、使用時 2)。   S($00～$1f)
$00ed0078  1.b  SX-WINDOW: テキストパレット明度(0、使用時 %11111_110)。
                             V0,V1($88～$ff)
$00ed0079  1.b  SX-WINDOW: テキストパレット明度(0、使用時 %00_10000_0)。
                             V1,V2,V3($82～$ba)
$00ed007a  1.b  SX-WINDOW: テキストパレット明度(0、使用時 %0000_0000)。
                             V3($00～$e0)
$00ed007b  1.b  SX-WINDOW: プリンタドライバ(PRTD) ID(0)
                             0:SHARP CZ 24ピン      5:EPSON ESC/P24-J84･C
                             1:EPSON ESC/P24-J83･C  6:ADOBE PostScript
                             2:NEC PC-PR***         7:CANON LIPS3
                             3:SHARP CZ 48ピン      8:EPSON ESC/Page
                             4:CANON BJ-***          
$00ed007c  1.b  SX-WINDOW: bit 7～4:バージョン番号(0、使用時 %0010_0011)
                                      %0000: SXWIN.X Ver.1.0
                                      %0001: SXWIN.X Ver.1.1
                                      %0010: SXWIN.X Ver.3.0
                           bit 3～0:ファイル保存モード
                           (bit 1:DIRDTOP.SX 保存)
                           (bit 0:SYSDTOP.SX 保存)
$00ed007d  1.b  SX-WINDOW: 背景ピクチャー(PICT) ID(0)
                             0:システム0  1:システム1  2:ユーザ定義
$00ed007e  1.b  SX-WINDOW: 画面モード(0)
                             bit 7: %0:768x512,16色    %1:下位ビットで指定
                             bit 6: %0:表示画面モード  %1:実画面モード
                             bit 5～0:IOCS _CRTMOD での値
$00ed007f  1.b  システム予約(0)
$00ed0080  4.w  SX-WINDOW: ウィンドウマージン 左、上、右、下(0,0,0,0)
$00ed0088  8.b  システム予約(0)
$00ed0090  1.b  X68030: 標準キャッシュ状態(0)。  %0:無効  %1:有効
                          bit 1: データキャッシュ
                          bit 0: 命令キャッシュ
$00ed0091  1.b  X68030: 起動時サウンド設定(0)。  0:OPM 演奏オフ  それ以外:オン
$00ed0092  1.b  X68030: 10MHz 相当のウェイト値(0)。0の場合は10と見なす。
$00ed0093  1.b  X68030: 16MHz 相当のウェイト値(0)。0の場合は4と見なす。
$00ed0094  1.b  VENUS-X: vx.r, vcc.r などによるユーザ拡張(0)
$00ed0095  1.b  XEiJ: XEiJ によるユーザ拡張(0)
                        bit 1: 起動画面   %0:表示する  %1:表示しない
                        bit 0: 同期周波数 %0:CRT向け   %1:LCD向け
$00ed0096  2.b  システム予約(0)
$00ed0098  2.b  Mach-2: マジックナンバ(0)。使用時 $4368。
$00ed009a  1.b  Mach-2: 同期転送の転送周期上限(0)
$00ed009b  1.b  Mach-2: 動作モード(0)
                          bit 3=%1:パリティチェック
                          bit 2=%1:限定速度
                          bit 1=%1:バースト転送
                          bit 0=%1:RAM BIOS
$00ed009c  4.b  未使用(0)
$00ed00a0  8.b  Mach-2: 各 SCSI ID ごとのフラグ
                          bit 7=%1:同期転送許可
                          bit 2～0:この値が本体 ID と同じときドライブとして認
                                   識しない
$00ed00a8  1.l  Mach-2: ソフト転送を行うブロック(512KB 単位でビット指定)(0)
                          %0:行わない  %1:行う
$00ed00ac  1.l  Mach-2: 通常バスサイクルを行う(ショートバスサイクルを禁止する)
                        ブロック(512KB単位でビット指定)(0) %0:行わない %1:行う
$00ed00b0 80.b  システム予約(0)

$00ed0100 768.b SRAM プログラムの先頭アドレス(0)
$00ed0400 15KB  SRAMDISK の先頭アドレス(0)
$00ed3fff       SRAM の最終アドレス(0)

備考:
　起動時に $00ed0000 からの8バイトのチェックデータが確認され、破壊されていた場
合は SRAM の初期化が行われる。$00ed0000～$00ed005a に ROM 中の初期値が書き込ま
れ、$00ed005b～$00ed00101(X68030 の場合は ～$00ed3fff)には0が書き込まれる。

　書き込み禁止状態の SRAM に対し書き込みを行っても無視されるだけで例外等は発生
しない。ただし、PhantomX Version 1.03d 未満ではバスエラーが発生する。

==============================================================================

・CGROM

address   font size     type     count  code(JIS)
$f00000   全角 16x16    非漢字    752   High:$21～$78,Low:$21～$7e
$f05e00    〃  16x16    第一水準 3008        $30～$4f
$f1d600    〃  16x16    第二水準 3478        $50～$74
$f388c0                 (未使用)
$f3a000  1/4角  8x8     ANK       256   $00～$ff
$f3a800   半角  8x16    〃        256   〃
$f3b800  1/4角 12x12    〃        256   〃
$f3d000   半角 12x24    〃        256   〃
$f40000   全角 24x24    非漢字    752   High:$21～$78,Low:$21～$7e
$f4d380    〃  24x24    第一水準 3008        $30～$4f
$f82180    〃  24x24    第二水準 3478        $50～$74
$fbf3b0                 (未使用)
$fbf400  1/4角  6x12    ANK       256   $00～$ff (X68030、X68030 Compact のみ)

以下のフォントは IOCS ROM のバージョンによりアドレスが異なる。
$xxxxxx  1/4角  6x12    ANK       256   $00～$ff

address  _ROMVER     機種
$ffcff6  $10_870318  X68000 初代(前期型)
$ffd018  $10_870507  X68000 初代(後期型)～SUPER [*1]
$ffd344  $11_910111  X68000 XVI
$ffd45e  $12_911024  X68000 Compact

$fbf400  $13_921127  X68030 / X68030 Compact

$fef400  $16_xxxxxx  XEiJ (X68000 Emulator in Java) IPLROM 1.6
         参考: https://twitter.com/kamadox/status/1508778031007285255

*1 ... IOCS _ROMVER が $10_870507 を返す ROM は3種類あり一部のコードが異なるが、
       1/4角 ANK フォントのアドレスはいずれも同じ。

==============================================================================

・割り込み

level   device  level2  vector  factor
7       NMI     ---     $1f     INTERRUPT スイッチ(オートベクタ)
6       MFP     15      $4f     CRTC H-SYNC(水平同期信号)
        │      14      $4e     CRTC 指定ラスタ走査
        │      13      $4d     Timer-A(V-DISP を入力とするタイマ)
        │      12      $4c     キーデータ受信
        │      11      $4b     〃        受信エラー
        │      10      $4a     〃        送信
        │       9      $49     〃        送信エラー
        │       8      $48     Timer-B(USART シリアルクロック発生)
        │       7      ---     (未使用)
        │       6      $46     CRTC V-DISP(垂直同期信号)
        │       5      $45     Timer-C(8bit 汎用タイマ)
        │       4      $44     Timer-D(〃)
        │       3      $43     OPM
        │       2      $42     本体前面電源スイッチ OFF 検出
        │       1      $41     外部電源 OFF 検出(拡張 I/O スロット)
        └       0      $40     RTC アラーム
5       SCC     ---     $50-$5f RS-232C/マウスデータ受信
4       ---     ---     ---     拡張 I/O スロット用
3       DMAC    ---     $64-$6b DMA 転送終了/エラー
2       ---     ---     ---     拡張 I/O スロット用
1       IOC      3      $60     FDC
        │       3      $61     FD
        │       1      $62     HD
        └       0      $63     プリンタ(BUSY 信号)

==============================================================================

・Ｘファイルヘッダの構造

offset  size
$00     2.b     識別子 'HU'(0x48 0x55)
$02     1.b     予約(0)
$03     1.b     ロードモード(0:通常 1:最小ブロック 2:高位アドレス)
$04     1.l     ベースアドレス
$08     1.l     実行開始アドレス
$0c     1.l     テキストセクションサイズ
$10     1.l     データセクションサイズ
$14     1.l     ブロックストレージセクションサイズ(.comm .stack を含む)
$18     1.l     再配置テーブルサイズ
$1c     1.l     シンボルテーブルサイズ
$20     1.l     SCD 行番号テーブルサイズ
$24     1.l     SCD シンボルテーブルサイズ
$28     1.l     SCD 文字列テーブルサイズ
$2c     4.l     予約(0)
$3c     1.l     バインドされたモジュールリストのファイル先頭からの位置

計 64($40)バイト

  実行ファイルは、ベースアドレスにロードして再配置処理が行われた状態で格納され
ている。よって、実際のロードアドレスがベースアドレスと等しければ再配置は行わな
くて良い。また両者が等しくない場合は、その差を足す。実行開始アドレスもベースア
ドレスが加算された値が格納されているので、こちらも差を足す。

・再配置処理

  再配置は以下の手続きを再配置テーブルのサイズ分繰り返す事によって行われる。

1) プログラム先頭アドレスを A、ベースアドレスを B とする。
2) A から B を引き、これを C とする。
3) 再配置テーブルから 1 ワード収得し、D とする。
4) D が 1 の場合、再配置テーブルから 1 ロングワード収得し、新しい D とする。
5) D の最下位ビットが 0(偶数)の場合は、A に D を加算し、A のアドレスからの
   1 ロングワードに C を足す。
6) D の最下位ビットが 1(奇数)の場合は、A に D-1 を加算し、A のアドレスからの
   1 ワードに C を足す(ワードサイズの再配置は通常使われる事はない)。

・セクションの並び順

1.ヘッダ($40 バイト)
2.テキストセクション
3.データセクション
3-1.セクション情報($40 バイト)
    SX モードで作成された実行ファイルには、データセクションの先頭に仮想オブジ
    ェクト *SYSTEM* がリンクされ、セクション情報が出力される。
3-2.".data"
3-3.".rdata" の実体
3-4.".rldata" の実体
3-5.相対オフセットテーブル(n*4 バイト)
    SX モード作成された実行ファイルにおいて、".rdata" 及び ".rldata" 内で相対
    セクション内へのポインタを使用した場合に出力される。
4.ブロックストレージセクション
  実体は出力されない。
4-1.".bss"
4-2.".common"
4-3.".stack"
5.再配置テーブル
6.シンボルテーブル
7.SCD テーブル
8.バインドされている場合、1～7 の繰り返し。
9.バインドリスト

  相対セクションは一種のオフセット定義であり、".rdata" と ".rldata" の実体を
除きその領域は実行ファイルに出力されないが、以下の順で定義される。

1.".rdata"
2.".rbss"
3.".rcommon"
4.".rstack"
5.".rldata"
6.".rlbss"
7.".rlcommon"
8.".rlstack"

・バインドリストの構造

offset  size
$00     8.b     ファイル名($e5 で始まるファイル名は $05 とする。残りはスペース
                で埋める.)
$08     3.b     拡張子(残りはスペースで埋める)
$0b     1.b     属性(%XLAD_VSHR。ただし ASHR 以外を指定しても当然エラーになる)
$0c     10.b    8 バイト以上のファイル名の残り(残りは $00 で埋める)
$16     1.w     最終変更時刻
                %mmmS_SSSS_HHHH_HMMM(H:時 Mm:分 S:秒)
$18     1.w     最終変更年月日
                %mmmD_DDDD_YYYY_YYYM(Y:年 Mm:月 D:日)
$1a     1.b     特殊属性の変更禁止フラグ┐BIND.X で使用
$1b     1.b     特殊属性(%00A0_0SHR)    ┘
$1c     1.l     バインドファイル先頭からのオフセット

計 32($20)バイト

  ディレクトリエントリとほぼ同じ構造である。年月日及び時刻の上下バイトがディレ
クトリエントリ同様逆転しているので注意すること。
  ファイルの残りが 0 バイトでリストが終わり、32 バイト以上の時はまだ続きがあり、
それ以外(1～31 バイト)ならば異常な構造となる。

・Ｚファイルヘッダの構造

offset  size
$00     1.w     第一識別子 $601a
$02     1.l     テキストセクションサイズ
$06     1.l     データセクションサイズ
$0a     1.l     ブロックストレージセクションサイズ(.comm .stack を含む)
$0e     8.b     予約(0)
$16     1.l     実行開始アドレス
$1a     1.w     第二識別子 $ffff

計 28($1c)バイト

==============================================================================

・ディスクマップ

        2HD

sector
     0          IPL
 1～ 2          第一 FAT
 3～ 4          第二 FAT(未使用)
 5～10          ルートディレクトリ(6 セクタ)
11～1231        データエリア

        ハードディスク

sector
     0          HD IPL メニュープログラム
     4          管理情報用システム領域
 5～20          空き
21～24          HD IPL
25～??          第一 FAT
??～??          第二 FAT(未使用)
??～??          ルートディレクトリ(16 セクタ)
??～??          データエリア
??～??          管理外エリア(代替トラック用)

2HD IPL
          $2000 から動くプログラムで、起動したドライブの 5 レコード目(ルートデ
        ィレクトリの先頭 32 個分)から HUMAN.SYS を探し、それが X 形式の $6800
        から動く実行ファイルであれば、それをロードして実行する。
          この IPL はディスクフォーマット時に書き込まれる。
          18～20 バイト目に全セクタ数(下位から上位の順)、21 バイト目にメディア
        タイプが書き込まれている。

第一 FAT
          FAT(File Allocation Table)とは、ファイルのディスク上のつながりを管理
        するもので、ファイル 1024 バイトに対し一個のファイルが使われる。ただし、
        FAT が先に確保される関係で、0 バイトのファイルでも一個の FAT が使われ
        る。以後 1024 バイト単位で一個ずつ増える。
          FAT 領域の先頭二個分はシステムで決められており、2HD の場合は $feffff
        の 3 バイト、ハードディスクの場合は領域確保の容量により 4MB までは
        $f8ffff の 3 バイト、5MB 以上は $f8ffffff の 4 バイトになる。
        FAT には 1.5byteFAT と 2byteFAT があり、4MB までは 1.5byteFAT、5MB か
        ら 2byteFAT となる。

        1.5byteFAT      fe ff ff ML lH hm ････          HML hml の順に読む
          2byteFAT      f8 ff ff ff AB CD ab cd ････    ABCD abcd 〃

┌─────┬──────┬──────────┐
│1.5byteFAT│  2byteFAT  │    内      容      │
├─────┼──────┼──────────┤
│      $000│       $0000│未使用エリア        │
│$002～$ff6│$0002～$fff6│次の FAT 番号       │
│      $ff7│       $fff7│使用不能クラスタ    │
│$ff8～$fff│$fff8～$ffff│このクラスタで終わり│
└─────┴──────┴──────────┘

        FAT 終端は通常 $fff、$ffff を使用する(それ以外は対応していない)。

ディレクトリエントリ

offset  size
$00     8.b     ファイル名(先頭一文字が $e5 なら消されたファイル、$00 ならディ
                レクトリの終わり。$e5 で始まるファイル名は $05 とする。残りは
                スペースで埋める.)
$08     3.b     拡張子(残りはスペースで埋める)
$0b     1.b     属性(%XLAD_VSHR)
$0c     10.b    8 バイト以上のファイル名の残り(残りは $00 で埋める)
$16     1.w     最終変更時刻
                %mmmS_SSSS_HHHH_HMMM(H:時 Mm:分 S:秒)
$18     1.w     最終変更年月日
                %mmmD_DDDD_YYYY_YYYM(Y:年 Mm:月 D:日)
$1a     1.w     最初の FAT 番号
$1c     1.l     ファイルサイズ

注意    16～$1c のワード/ロングワードデータのバイトの並びは little-endian。

HD IPL メニュープログラム
          $2000 から動作し、HD を複数のシステムで使用する場合どのシステムを起
        動するかを選択するプログラム。
          単体のシステムで全ての領域を確保している場合は、単に HD IPL を $2400
        にロードして実行するだけ。
          この IPL はディスクフォーマット時に書き込まれる。

管理情報用システム領域
          HD 上に複数のシステムを確保する場合の情報を書き込む。
        管理情報は 16 バイトずつ 16 のブロックに分けられ、先頭の 1 ブロックに
        はドライブの情報、残りの 15 ブロックにはシステムの情報が書かれる。

        (1)先頭のドライブ情報ブロック
        4.b     'X68K'
        1.l     最大レコード番号
        1.l     代替トラックの先頭のレコード番号
        1.l     シッピングゾーンのレコード番号
        (2)その他の 15 ブロック
        8.b     システム名
        1.l     先頭レコード番号
        1.l     レコード長

          先頭レコードの最上位 8 ビットが 0 でない場合は、現在無効な領域となる。
        データは FORMAT の初期化で書き込まれる。
          先頭の 16 バイト以外は、FORMAT の領域確保/選択/解放で書き換えられる。

(参考)ドライブ情報ブロックの値
容量    最大レコード    代替レコード    HD OFF レコード
10MB    $09f54          $09f54          $0af50
20MB    $139c8          $139c8          $15660
40MB    $27930          $27930          $2acc0

※20MB の代替レコードは $13c98 という情報があるが確認していない。

HD IPL
          $2400 から動作し、起動したドライブのルートディレクトリの先頭 32 個の
        中から HUMAN.SYS を探し、それが X 形式の $6800 から動く実行ファイルで
        あれば、それをロードして実行する。ただしこのファイルは連続セクタにコピ
        ーされていなければならない。

管理外エリア(代替トラック用)
          通常は使用されない。不良トラックの代替用である。

==============================================================================

・FDC リザルトステータス

リザルトステータス 0(ST0)
        bit  7   6   5   4   3   2   1   0
          ┌─┬─┬─┬─┬─┬─┬─┬─┐
          │　IC　│SE│EC│NR│HD│　US　│
          └─┴─┴─┴─┴─┴─┴─┴─┘

        bit 7～6  IC    Interrupt Code(割り込み要因を示す)
                        %00: コマンドの正常終了 (NT: Normal Terminate)
                        %01: コマンドの異常終了 (AT: abnormal Terminate)
                        %10: 与えられたコマンドは無効(Invalid)であった
                                                (IC: Invalid Command)
                        %11: デバイスに状態遷移があった
                                                (AI: Attention Interrupt)
        bit 5   SE      Seek End
                        %0: 通常動作
                        %1: SEEK/RECALIBRATE コマンド実行終了
        bit 4   EC      Equipment Check
                        %0: 通常動作
                        %1: ドライブから Fault 信号を受けった / RECALIBRATE
                            コマンド実行エラー(トラック 0 が見つからない)
        bit 3   NR      Not Ready
                        %0: 通常動作
                        %1: 指定されたドライブはレディでない
        bit 2   HD      Head Address(割り込み要求時のヘッド番号)
                        %0: 表面
                        %1: 裏面
        bit 1～0  US1～US0
                        Unit Select n(割り込み要求時のドライブ番号)
                        %00: ドライブ #0
                        %01: 〃   #1
                        %10: 〃   #2
                        %11: 〃   #3

リザルトステータス 1(ST1)
        bit  7   6   5   4   3   2   1   0
          ┌─┬─┬─┬─┬─┬─┬─┬─┐
          │EN│　│DE│OR│　│ND│NW│MA│
          └─┴─┴─┴─┴─┴─┴─┴─┘

        bit 7   EN      End of Cylinder
                        %0: 通常動作
                        %1: コマンド中の EOT パラメータで与えた最終セクタを越
                            えてリード/ライトしようとした
        bit 5   DE      Data Error
                        %0: 通常動作
                        %1: ディスク上の ID やデータに CRC エラーを検出した
                                                (READ ID コマンドは除く)
        bit 4   OR      Over Run
                        %0: 通常動作
                        %1: データ転送時、ホストが規定時間以内に応答しなかった
        bit 2   ND      No Data
                        %0: 通常動作
                        %1: 指定されたセクタが見つからない
        bit 1   NW      Not Writable
                        %0: 通常動作
                        %1: 書き込み動作時 Write Protect 信号を受け取った
        bit 0   MA      Missing Address Mark
                        %0: 通常動作
                        %1: アドレスマークが見つからない

リザルトステータス 2(ST2)
        bit  7   6   5   4   3   2   1   0
          ┌─┬─┬─┬─┬─┬─┬─┬─┐
          │　│CM│DD│NC│SH│SN│BC│MD│
          └─┴─┴─┴─┴─┴─┴─┴─┘

        bit 6   CM      Control Mark
                        %0: READ DELETED DATA 実行時に DAM を検出した
                            通常動作
                        %1: READ DATA/READ DIAGNOSTIC/SCAN 実行時に DDAM を検
                            出した
        bit 5   DD      Data Error in Data Field
                        %0: 通常動作
                        %1: データの CRC エラーを検出した
        bit 4   NC      No Cylinder
                        %0: 通常動作
                        %1: ST1 の ND ビットが %1 のとき、ID の C バイトが一致
                            せず、かつ $ff でもない
        bit 3   SH      Scan Equal Hit
                        %0: 通常動作
                        %1: SCAN コマンドで Equal 条件が成立した
        bit 2   SN      Scan Not Satisfied
                        %0: 通常動作
                        %1: SCAN コマンドで最終セクタまで条件を満足しない
        bit 1   BC      Bad Cylinder
                        %0: 通常動作
                        %1: ST1 の ND ビットが %1 のとき、ID の C バイトが $ff
                            である(READ DIAGNOSTIC コマンドを除く)
        bit 0   MD      Missing Address Mark in Data Field
                        %0: 通常動作
                        %1: データアドレスマークが見つからない

リザルトステータス 3(ST3)
        bit  7   6   5   4   3   2   1   0
          ┌─┬─┬─┬─┬─┬─┬─┬─┐
          │FT│WP│RY│T0│TS│HD│　US　│
          └─┴─┴─┴─┴─┴─┴─┴─┘

        bit 7   FT      ドライブの Fault 信号の状態
        bit 6   WP      ドライブの Write Protect 信号の状態
        bit 5   RY      ドライブの Ready 信号の状態
        bit 4   T0      ドライブの Track0 信号の状態
        bit 3   TS      ドライブの Two Side 信号の状態
        bit 2   HD      コマンドフェーズで指定された HD の値
        bit 1～0  US1～US0
                        コマンドフェーズで指定された US1、US0 の値

※ ST3 は SENSE DEVICE STATUS コマンドでのみ返される。


==============================================================================

・システムファイル

タイトル表示ファイル
          Human68k は起動時に TITLE.SYS というファイルがあると、標準のタイトル
        を出さずに、TITLE.SYS に従ったタイトルを表示する。
          TITLE.SYS は $10044 バイト以下のファイルで、テキストタイトルとビット
        イメージタイトルの二種類がある。
          テキストタイトルはコマンドモード用に用意されたもので、タイトル表示フ
        ァイルの文字列を表示する。制御コード、エスケープシーケンスも使用可能で
        あるが、先頭 1 バイトが 0 であってはいけない。
          ビットイメージタイトルはビジュアル用で、ビットイメージデータを表示す
        る。先頭 1 バイトが 0 でなければならない。文字属性が 0 の場合はカーソ
        ル及びファンクションキーが消去される。

offset  size
 0      1.b     0(固定)
 1      1.b     文字属性
 2      1.b     塗りつぶすテキストプレーンの指定(0:塗りつぶす面はない
                        1:プレーン 0 2:プレーン 1 4:プレーン 2 8:プレーン 3)
 3      1.b     表示するテキストプレーンの指定(1,2,4,8:同上)
 4      1.w     テキストカラー 4～ 7 のパレット
 6      1.w     〃             8～15 〃
 8      52.b    シェルの指定("SHELL ="の右辺),0
60      1.w     表示開始Ｘ座標
62      1.w     〃      Ｙ座標
64      1.w     ビットイメージデータのＸ方向のドット数
66      1.w     〃                    Ｙ〃
68      ???     ビットイメージデータ

外字ファイル
          Human68k は起動時に USKCG.SYS というファイルがあると、外字ファイルと
        して OS 内の外字エリアに読み込む。
          USKCG.SYS は $10000 バイト以下のファイルで、その作成/修正は USKCGM.X
        で行なう。
          全角の漢字コードは JIS,S-JIS のどちらでもかまわないが、JIS 漢字コー
        ドは low/high が逆になっているので注意すること。

offset  size
0       34.b    未使用
34       1.w    漢字コード
36      16.w    フォントデータ
         1.w    半角外字 S-JIS コード
        16.b    フォントデータ
        …
         1.w    16x16 から 24x24 への切り換えコード($ffff)
         1.w    漢字コード
        72.b    フォントデータ
         1.w    半角外字 S-JIS コード
        48.b    フォントデータ

キー定義ファイル
          Human68k は起動時に KEY.SYS というファイルがあると、ファンクションキ
        ーのデータとして定義する。
          KEY.SYS は 712 バイトのファイルで、KEY.X によって作成/変更する。
          先頭が $fe で始まるキーは、$fe 以降 8 文字は表示用として使われ、9 文
        字目からが本当のキーコードとなる。文字列は必ず 0 で終わらなければなら
        ない。

offset  size
  0     32.b*10 F0～F9
320     32.b*10 Shift+F0～F9
640     6.b     ROLL UP
646     6.b     ROLL DOWN
652     6.b     INS
658     6.b     DEL
664     6.b     上向きカーソルキー
670     6.b     左〃
676     6.b     右〃
682     6.b     下〃
688     6.b     CLR
694     6.b     HELP
700     6.b     HOME
706     6.b     UNDO

ビープ音声ファイル
          Human68k は CONFIG.SYS で "BELL = BEEP.SYS" と指定すると、BEEP.SYS
        を ADPCM のデータファイルとして、OS 内に読み込む。
          データはサンプリング周波数 15.6KHz で $ffff バイト以内の、ADPCM から
        読み込んだもの。

==============================================================================

・ASCII 制御コード

$00     NUL     空白                :Null
$01     SOH     ヘディング開始  TC 1:Start of Heading
$02     STX     テキスト開始    TC 2:Start of Text
$03     ETX     テキスト終結    TC 3:End of Text
$04     EOT     伝送終了        TC 4:End of Transmission
$05     ENQ     問い合わせ      TC 5:Enquiry
$06     ACK     肯定応答        TC 6:Acknowledge
$07     BEL     警告ベル            :Bell
$08     BS      後退            FE 0:Back Space
$09     HT      水平タブ        FE 1:Horizontal Tabulation
$0a     LF      改行            FE 2:Line Feed
$0b     VT      垂直タブ        FE 3:Vertical   Tabulation
$0c     FF      書式送り        FE 4:From Feed
$0d     CR      復帰            FE 5:Carriage Return
$0e     SO      シフトアウト        :Shift Out
$0f     SI      シフトイン          :Shift In
$10     DLE     伝送制御拡張    TC 7:Data Link Escape
$11     DC1     装置制御 1      DC 1:Device Control 1
$12     DC2     装置制御 2      DC 2:〃             2
$13     DC3     装置制御 3      DC 3:〃             3
$14     DC4     装置制御 4      DC 4:〃             4
$15     NAK     否定応答        TC 8:Negative Acknowledge
$16     SYN     同期信号        TC 9:Synchronous idle
$17     ETB     伝送ﾌﾞﾛｯｸ終結   TC10:End of Transmission Bock
$18     CAN     取り消し            :Cancel
$19     EM      媒体終端            :End of Medium
$1a     SUB     置換キャラクタ      :Substitute Character
$1b     ESC     拡張                :Escape
$1c     FS(→)  ﾌｧｲﾙ  分離ｷｬﾗｸﾀ IS 4:File Separator
$1d     GS(←)  ｸﾞﾙ-ﾌﾟ分離ｷｬﾗｸﾀ IS 3:Group      〃
$1e     RS(↑)  ﾚｺ-ﾄﾞ 分離ｷｬﾗｸﾀ IS 2:Record     〃
$1f     US(↓)  ﾕﾆｯﾄ  分離ｷｬﾗｸﾀ IS 1:Unit       〃
$20     SPC     間隔                :Space
$7f     DEL     削除                :Delete

TC = 伝送制御キャラクタ         Transmission Control Characters
FE = 書式制御キャラクタ         Format Effectors
DC = 装置制御キャラクタ         Device Control Characters
IS = 情報分離キャラクタ         Infomation Separators

・IOCS で有効な ASCII 制御コード

$07     BEL     ベルを鳴らす
$08     BS      1 文字左に移動
$09     HT      次のタブ位置に移動
                        (最大タブ位置より右側で 1 行下の 1 桁目に移動)
$0a     LF      1 行下に移動(最終行で 1 行繰り上がる)
$0b     VT      1 行上に移動(先頭行の時は無効)
$0c     FF      1 文字右に移動
$0d     CR      左端に移動
$1a     SUB     画面消去後先頭行左端に移動
$1b     ESC     エスケープシーケンスの開始
$1e     RS      先頭行左端に移動

==============================================================================

・エスケープシーケンス

[{pl};{pc}H     移動({pl}=0 または省略時 {pl}=1、{pl}>最終行の時 {pl}=最終行)
                    ({pc}=0 または省略時 {pc}=1、{pc}>最終桁の時 {pc}=最終桁)
[{pl};{pc}f     同上
={l}{c}         同上({l},{c} は行・桁位置に $20 を加算した文字で、省略不可)
[{pn}A          {pn} 行上に移動({pn}=0 または省略時 {pn}=1)
[{pn}B          {pn} 行下に移動(〃)
[{pn}C          {pn} 文字右に移動(〃)
[{pn}D          {pn} 文字左に移動(〃)
[0J             カーソル位置から最終行最終桁まで消去(0 は省略可能)
[1J             先頭行左端からカーソル位置まで消去
[2J             画面消去後先頭行左端に移動
*               同上
[0K             カーソル位置から最終桁まで消去(0 は省略可能)
[1K             左端からカーソル位置まで消去
[2K             カーソル行消去
[{pn}M          カーソル行から下に {pn} 行削除({pn}=0 または省略時 {pn}=1)
                削除した行より後の行が繰り上がり、繰り上がった行の先頭行左端に
                移動する
[{pn}L          カーソル行から下に {pn} 行空行を挿入
                                                  ({pn}=0 または省略時 {pn}=1)
                カーソル行より下の行が繰り下がり、挿入された行の先頭行左端に移
                動する
D               1 行下に移動(最終行で 1 行繰り上がる)
E               1 行下の左端に移動(〃)
M               1 行上に移動(先頭行で 1 行繰り下がる)
[s              カーソル位置と文字表示属性を保存する
[u              保存したカーソル位置と文字表示属性に戻す
[>5l            カーソルを表示する
[>5h            カーソルを消去する
[{ps}m          文字表示属性を設定する
                             ({ps} は ; で区切って複数指定可能、省略時 {ps}=0)
                {ps}    機能
                0       初期設定に戻す
                1       強調トグル(30～33,40～43 と 34～37,44～47 を交互に変更)
                7       逆転トグル(30～33,34～37 と 40～43,44～47 を交互に変更)
                30～33  黒,水色,黄色,白
                34～37  〃                  強調
                40～43  〃              逆転
                44～47  〃              逆転強調

追加: Human68k
[6n             実行後コンソール入力にカーソル位置を ESC[{pl};{pc}R の形で通知
                ※Human68kのいずれのバージョンでも正常に動作しない(桁位置が100
                  以上のとき、10の位をゼロサプレスしてしまう)。
                ※ROM IOCS version 1.0～1.2では有効にならない。version 1.3また
                  はIOCS.Xの組み込みが必要。
[>1h            ファンクションキー行を消去・解放し、先頭行左端に移動
[>1l            ファンクションキー行を表示・占有し、先頭行左端に移動

追加: ROM IOCS version 1.3 / IOCS.X・HIOCS.X
[?4h            スムーススクロールにする
[?4l            ジャンプ〃
[{pn}P          カーソル位置から {pn} 文字削除
[{pn}X          カーソル位置から {pn} 文字属性オフにして消去
[{pn}@          カーソル位置に {pn} 個の空白文字を属性オフの状態で挿入

追加: Console Driver Type-D
0               バックスクロールバッファへの取り込みを中断する
1               〃                                    再開する

追加: condrv(em).sys + HIOCS PLUS
0               バックスクロールバッファへの取り込みを中断する
1               〃                                    再開する
2               システムステータスの表示を禁止する
3               〃                        許可する

注意
・カーソル移動シーケンスで、移動できない位置を指定した場合は移動しない。
・行位置、桁位置は 1 始まり。

==============================================================================
